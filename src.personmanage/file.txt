实例要求：
	开发一个用户管理程序，其中用户的基本信息包括：
		用户编号、用户姓名、性别、生日；
	要求通过程序实现用户的统一管理，所有的信息保存在数据库之中；
	
	1.所有的界面使用命令行的方式完成，而不使用图形界面，在开发中使用图形界面的比较少；
	2.本程序中因为要牵扯到数据库的问题，使用的数据库使用Mysql，所以要使用jdbc的操作；
	3.在整个程序中在开发代码的时候一定要先把接口设计出来；
		假设管理程序需要增加、修改、删除、查看用户；
	4.IO、类集、面向对象的概念；

	数据库的创建脚本编写完成：
	DROP TABLE user;
	create table user(
		id int AUTO_INCREMENT PRIMARY KEY,
		name varchar(16) not null,
		password varchar(16) not NULL,
		age int not null,
		sex varchar(10) default "man",
		birthday DATE
	);
	
	在进行任何操作的时候首先必须完成的就是接口，接口的定义的时候，为了开发方便，建议在写的时候前

面加上一个“I”；
	在写接口的时候最好让接口名称与要操作的代码进行关联；
		要操作的是User类，所以接口上可以写：IUserDAO
		DAO：数据库操作对象，表示的是操作数据的；
	接口准备好之后，下面最好将表中的字段进行一些抽象，做一个简单的java程序的操作类；此类在操作的

时候最好与表中的数据相对应；
	下面完善一个操作的接口；
	在开发中凡是数据库的更新操作方法最好都加入一个doXxx，这样做的目的是为了以后在讲解java更深入的

开发；
	所有的查找操作最好使用findXxx命名格式；
	操作接口完成之后，实际上对应此表的一个完整的操作的标准就指定出来了，那么下面要做的事情时需要

一个专门用于进行数据库连接的操作类；
	有接口之后，下一步实现接口；
	
	一个实现类完成了，一个实现类完成之后，下一步要操作的是工厂，因为只要看见接口了，就可以通过工厂设计进行解耦合的操作，
	当然，为了开发方便，用户可以自己通过属性文件的配置方法完成。
	
	在实际的开发中一定要注意，操作数据库的最前端代码是不能出现任何的SQL包的导入语句的；
	
	此时，通过以上的代码完成了后端操作，但是此段代码中存在问题：
		出现在实现类之中，实现类的主要功能是完成数据库的具体的操作，
		但是对于数据库的打开和关闭操作与具体的业务操作是么有任何关系的，
		所以此时最好加入代理的操作。
	
	
	
	
	
	
	
	
	
	
	
	