实例要求：
	开发一个用户管理程序，其中用户的基本信息包括：
		用户编号、用户姓名、密码、年龄、性别、生日；
	要求通过程序实现用户的统一管理，所有的信息保存在数据库之中；
	
	思路：
		1.所有的界面使用命令行的方式完成，而不使用图形界面，在开发中使用图形界面的比较少；
		2.本程序中因为要牵扯到数据库的问题，使用的数据库是Mysql，所以要使用jdbc的操作；
		3.在整个程序中在开发代码的时候一定要先把接口设计出来；
			假设管理程序需要增加、修改、删除、查看用户；
		4.IO、类集、面向对象的概念；

	数据库的创建脚本编写完成：
	DROP TABLE user;
	create table user(
		id int AUTO_INCREMENT PRIMARY KEY,
		name varchar(16) not null,
		password varchar(16) not NULL,
		age int not null,
		sex varchar(10) default "man",
		birthday DATE
	);
	
	实现步骤：
		1.首先定义一个用户User类，定义用户的基本信息属性，与数据库字段对应；
			【User类】：定义表字段和setget方法；
		2.在进行任何操作的时候首先必须完成的就是接口，接口的定义的时候，为了开发方便，建议在写的时候前面加上一个“I”；
			在写接口的时候最好让接口名称与要操作的代码进行关联；
				要操作的是User类，所以接口上可以写：IUserDAO
				DAO：数据库操作对象，表示的是操作数据的；			
			接口准备好之后，下面最好将表中的字段进行一些抽象，做一个简单的java程序的操作类；此类在操作的时候最好与表中的数据相对应；
			下面完善一个操作的接口；在接口中定义操作数据库的方法（增删改查）；
			在开发中凡是数据库的更新操作方法最好都使用doXxx命名格式，所有的查找操作最好使用findXxx命名格式；这样做的目的是为了以后在讲解java更深入的开发；
			【IUserDAO接口】：定义抽象增删改查方法；
		3.操作接口完成之后，实际上对应此表的一个完整的操作的标准就指定出来了，那么下面要做的事情是需要一个专门用于进行数据库连接的操作类；
			【DataBaseConnection类】：数据库连接、关闭类；
	
		4.有接口之后，下一步实现接口；
			【IUserDAOImpl类】：实现IUserDAO接口；
			【IUserDAOProxy类】：IUserDAOImpl实现类的代理类；
				1.由代理来完成数据库的打开和关闭操作；
				2.将连接好的数据库对象传给自己所代理的类；
	
		5.一个实现类完成了，一个实现类完成之后，下一步要操作的是工厂，因为只要看见接口了，就可以通过工厂设计进行解耦合的操作，当然，为了开发方便，用户可以自己通过属性文件的配置方法完成。
			【DAOFactory类】：工厂设计，设置数据库操作接口的实现方式（实现类自己实现or实现类的代理类实现）；
				通过静态方法获取实现方式的类的对象，通过对象，再去调用实现类中的具体实现的增删改查方法等；
		
	
		在实际的开发中一定要注意，操作数据库的最前端代码是不能出现任何的SQL包的导入语句的；
		
		此时，通过以上的代码完成了后端操作，但是此段代码中存在问题：
			出现在实现类之中，实现类的主要功能是完成数据库的具体的操作，
			但是对于数据库的打开和关闭操作与具体的业务操作是么有任何关系的，
			所以此时最好加入代理的操作。
			
		发现代理和真实主题的实现各司其职，所有的数据库的打开和连接由代理完成，而具体的操作由实现类完成。
		
		此时，后端的操作代码就完成了。
		
		6.设计前台操作代码，用于完成后端代码的调用；
			1.首先设计一个数据输入类，用于接收键盘录入信息，并对输入的信息做校验；
				【InputData】：判断输入的数据是什么类型，从而根据指定的要求进行操作。
					获取字符串；
					获取整形数字；
					获取浮点型数字；
					获取日期；
			2.其次设计一个用户操作类，定义一系列的增删改查静态方法，并在方法中通过工厂调用后端数据库操作实现类代码中的增删改查操作；
				【UserOperate】：实现菜单显示中的功能对应的方法；
			3.然后设计一个菜单显示类，编号显示增删改查等操作；
				【Menu】：获取键盘输入的编号，通过switch方法，选择调用用户操作类中的方法；
			4.为了便于操作，菜单要始终显示；
				
		7.定义一个测试类，实例化菜单类对象。
			【TestUserAdmin】：完成功能的测试；
	总结：
		1.所有的程序在设计的时候都应该以接口为操作的标准；
		2.每一个类只完成一个具体的功能，如果有多个功能的话，则需要分开类进行；
		3。本程序中菜单和操作类都不是重点，关键是数据的操作类和接口的关系是重点问题；
		4.工厂设计和代理设计是在开发中使用最多的设计思路，所以，一定要重点掌握；
		5.集合操作在开发中此种情况使用的最多的；
		
	忠告：
		如果觉得不是很理解本道程序，建议反复熟悉，学习程序的设计思想，之后再进行创新和改革；
		
	世界上有两种人很厉害：
		1.可以进行独立创新的人；
		2.进行模拟的人；
	
	
	
	
	
	
	
	
	
	
	
	